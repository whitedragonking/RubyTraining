# 修正すべきエラーたち

# Cop supports --auto-correct.
Alias:
  Description: 'Use alias_method instead of alias.'
  Enabled: true

AlignArray:
  Description: >-
                 Align the elements of an array literal if they span more than
                 one line.
  Enabled: true

# Cop supports --auto-correct.
AndOr:
  Description: 'Use &&/|| instead of and/or.'
  Enabled: true

# Cop supports --auto-correct.
AlignParameters:
  Description: >-
                 Align the parameters of a method call if they span more
                 than one line.
  Enabled: true
  # # Alignment of parameters in multi-line method calls.
  # #
  # # The `with_first_parameter` style aligns the following lines along the same column
  # # as the first parameter.
  # #
  # #     method_call(a,
  # #                 b)
  # #
  # # The `with_fixed_indentation` style alignes the following lines with one
  # # level of indenation relative to the start of the line with the method call.
  # #
  # #     method_call(a,
  # #       b)
  # EnforcedStyle: with_first_parameter
  # SupportedStyles:
    # - with_first_parameter
    # - with_fixed_indentation

ArrayJoin:
  Description: 'Use Array#join instead of Array#*.'
  Enabled: true

Attr:
  Description: 'Checks for uses of Module#attr.'
  Enabled: true

BeginBlock:
  Description: 'Avoid the use of BEGIN blocks.'
  Enabled: true

BarePercentLiterals:
  Description: 'Checks if usage of %() or %Q() matches configuration.'
  Enabled: true

BlockComments:
  Description: 'Do not use block comments.'
  Enabled: true

BlockEndNewline:
  Description: 'Put end statement of multiline block on its own line.'
  Enabled: true

# Cop supports --auto-correct.
BlockDelimiters:
  Description: >-
                Avoid using {...} for multi-line blocks (multiline chaining is
                always ugly).
                Prefer {...} over do...end for single-line blocks.
  Enabled: true

# Configuration parameters: IndentWhenRelativeTo, SupportedStyles, IndentOneStep.
CaseIndentation:
  Description: 'Indentation of when in a case/when/[else/]end.'
  Enabled: true
  # IndentWhenRelativeTo: case
  # SupportedStyles:
    # - case
    # - end
  # IndentOneStep: false

# Cop supports --auto-correct.
CharacterLiteral:
  Description: 'Checks for uses of character literals.'
  Enabled: true

CaseEquality:
  Description: 'Avoid explicit use of the case equality operator(===).'
  Enabled: true

ClassAndModuleCamelCase:
  Description: 'Use CamelCase for classes and modules.'
  Enabled: true

ClassAndModuleChildren:
  Description: 'Checks style of children classes and modules.'
  Enabled: true

ClassCheck:
  Description: 'Enforces consistent use of `Object#is_a?` or `Object#kind_of?`.'
  Enabled: true

ClassMethods:
  Description: 'Use self when defining module/class methods.'
  Enabled: true

ClassVars:
  Description: 'Avoid the use of class variables.'
  Enabled: true

ClosingParenthesisIndentation:
  Description: 'Checks the indentation of hanging closing parentheses.'
  Enabled: true

# Cop supports --auto-correct.
ColonMethodCall:
  Description: 'Do not use :: for method call.'
  Enabled: true

CommandLiteral:
  Description: 'Use `` or %x around command literals.'
  Enabled: true

CommentAnnotation:
  Description: >-
                 Checks formatting of special comments
                 (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  Enabled: true

CommentIndentation:
  Description: 'Indentation of comments.'
  Enabled: true

ConstantName:
  Description: 'Constants should use SCREAMING_SNAKE_CASE.'
  Enabled: true

# Cop supports --auto-correct.
DefWithParentheses:
  Description: 'Use def with parentheses when there are arguments.'
  Enabled: true

# Configuration parameters: Style, SupportedStyles.
DotPosition:
  Description: 'Checks the position of the dot in multi-line method calls.'
  Enabled: true
  # EnforcedStyle: leading
  # SupportedStyles:
    # - leading
    # - trailing

DoubleNegation:
  Description: 'Checks for uses of double negation (!!).'
  Enabled: true

EachForSimpleLoop:
  Description: >-
                 Use `Integer#times` for a simple loop which iterates a fixed
                 number of times.
  Enabled: true

EachWithObject:
  Description: 'Prefer `each_with_object` over `inject` or `reduce`.'
  Enabled: true

ElseAlignment:
  Description: 'Align elses and elsifs correctly.'
  Enabled: true

EmptyElse:
  Description: 'Avoid empty else-clauses.'
  Enabled: true

EmptyCaseCondition:
  Description: 'Avoid empty condition in case statements.'
  Enabled: true

EmptyLinesAroundBlockBody:
  Description: "Keeps track of empty lines around block bodies."
  Enabled: true

# Cop supports --auto-correct.
EmptyLiteral:
  Description: 'Prefer literals to Array.new/Hash.new/String.new.'
  Enabled: true

EndBlock:
  Description: 'Avoid the use of END blocks.'
  Enabled: true

EndOfLine:
  Description: 'Use Unix-style line endings.'
  Enabled: false

EvenOdd:
  Description: 'Favor the use of Fixnum#even? && Fixnum#odd?'
  Enabled: true

ExtraSpacing:
  Description: 'Do not use unnecessary spacing.'
  Enabled: true

FileName:
  Description: 'Use snake_case for source file names.'
  Enabled: true

FrozenStringLiteralComment:
  Description: >-
                 Add the frozen_string_literal comment to the top of files
                 to help transition from Ruby 2.3.0 to Ruby 3.0.
  Enabled: true

InitialIndentation:
  Description: >-
    Checks the indentation of the first non-blank non-comment line in a file.
  Enabled: true

FirstParameterIndentation:
  Description: 'Checks the indentation of the first parameter in a method call.'
  Enabled: true

FlipFlop:
  Description: 'Checks for flip flops'
  Enabled: true

# Configuration parameters: EnforcedStyle, SupportedStyles.
For:
  Description: 'Checks use of for or each in multiline loops.'
  Enabled: true
  # EnforcedStyle: each
  # SupportedStyles:
    # - for
    # - each

FormatString:
  Description: 'Enforce the use of Kernel#sprintf, Kernel#format or String#%.'
  Enabled: true
  EnforcedStyle: 'sprintf'

GlobalVars:
  Description: 'Do not introduce global variables.'
  Enabled: true

GuardClause:
  Description: 'Check for conditionals that can be replaced with guard clauses'
  Enabled: true

IfInsideElse:
  Description: 'Finds if nodes inside else, which can be converted to elsif.'
  Enabled: true

IfUnlessModifier:
  Description: >-
                 Favor modifier if/unless usage when you have a
                 single-line body.
  Enabled: true

IfUnlessModifierOfIfUnless:
  Description: >-
                 Avoid modifier if/unless usage on conditionals.
  Enabled: true

IfWithSemicolon:
  Description: 'Never use if x; .... Use the ternary operator instead.'
  Enabled: true

IndentationConsistency:
  Description: 'Keep indentation straight.'
  Enabled: true

IdenticalConditionalBranches:
  Description: >-
                 Checks that conditional statements do not have an identical
                 line at the end of each branch, which can validly be moved
                 out of the conditional.
  Enabled: true

IndentArray:
  Description: >-
                 Checks the indentation of the first element in an array
                 literal.
  Enabled: true

IndentAssignment:
  Description: >-
                 Checks the indentation of the first line of the
                 right-hand-side of a multi-line assignment.
  Enabled: true

IndentHash:
  Description: 'Checks the indentation of the first key in a hash literal.'
  Enabled: true

InfiniteLoop:
  Description: 'Use Kernel#loop for infinite loops.'
  Enabled: true

Lambda:
  Description: 'Use the new lambda literal syntax for single-line blocks.'
  Enabled: true

# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
LambdaCall:
  Description: 'Use lambda.call(...) instead of lambda.(...).'
  Enabled: true
  # EnforcedStyle: call
  # SupportedStyles:
    # - call
    # - braces

# Cop supports --auto-correct.
LineEndConcatenation:
  Description: 'Use \\ instead of + to concatenate two string literals at line end.'
  Enabled: true

# Cop supports --auto-correct.
MethodCallWithoutArgsParentheses:
  Description: >-
                 Checks if the method definitions have or don't have
                 parentheses.
  Enabled: true

MethodDefParentheses:
  Description: >-
                 Checks if the method definitions have or don't have
                 parentheses.
  Enabled: true

MethodName:
  Description: 'Use the configured style when naming methods.'
  Enabled: true

ModuleFunction:
  Description: 'Checks for usage of `extend self` in modules.'
  Enabled: true

MultilineArrayBraceLayout:
  Description: >-
                 Checks that the closing brace in an array literal is
                 either on the same line as the last array element, or
                 a new line.
  Enabled: true

MultilineBlockChain:
  Description: 'Avoid multi-line chains of blocks.'
  Enabled: true

MultilineBlockLayout:
  Description: 'Ensures newlines after multiline block do statements.'
  Enabled: true

MultilineHashBraceLayout:
  Description: >-
                 Checks that the closing brace in a hash literal is
                 either on the same line as the last hash element, or
                 a new line.
  Enabled: true

MultilineIfThen:
  Description: 'Never use then for multi-line if/unless.'
  Enabled: true

MultilineMethodCallBraceLayout:
  Description: >-
                 Checks that the closing brace in a method call is
                 either on the same line as the last method argument, or
                 a new line.
  Enabled: true

MultilineMethodCallIndentation:
  Description: >-
                 Checks indentation of method calls with the dot operator
                 that span more than one line.
  Enabled: true

MultilineMethodDefinitionBraceLayout:
  Description: >-
                 Checks that the closing brace in a method definition is
                 either on the same line as the last method parameter, or
                 a new line.
  Enabled: true

MultilineOperationIndentation:
  Description: >-
                 Checks indentation of binary operations that span more than
                 one line.
  Enabled: true

MultilineTernaryOperator:
  Description: >-
                 Avoid multi-line ?: (the ternary operator);
                 use if/unless instead.
  Enabled: true

NegatedIf:
  Description: >-
                 Favor unless over if for negative conditions
                 (or control flow or).
  Enabled: true

NegatedWhile:
  Description: 'Favor until over while for negative conditions.'
  Enabled: true

NestedModifier:
  Description: 'Avoid using nested modifiers.'
  Enabled: true

NestedParenthesizedCalls:
  Description: >-
                 Parenthesize method calls which are nested inside the
                 argument list of another parenthesized method call.
  Enabled: true

NestedTernaryOperator:
  Description: 'Use one expression per branch in a ternary operator.'
  Enabled: true

Next:
  Description: 'Use `next` to skip iteration instead of a condition at the end.'
  Enabled: true

NilComparison:
  Description: 'Prefer x.nil? to x == nil.'
  Enabled: true

NonNilCheck:
  Description: 'Checks for redundant nil checks.'
  Enabled: true

Not:
  Description: 'Use ! instead of not.'
  Enabled: true

NumericLiteralPrefix:
  Description: 'Use smallcase prefixes for numeric literals.'
  Enabled: true

OneLineConditional:
  Description: >-
                 Favor the ternary operator(?:) over
                 if/then/else/end constructs.
  Enabled: true

# Allow safe assignment in conditions.
ParenthesesAroundCondition:
  AllowSafeAssignment: true

BinaryOperatorParameterName:
  Description: 'When defining binary operators, name the argument other.'
  Enabled: true

OptionalArguments:
  Description: >-
                 Checks for optional arguments that do not appear at the end
                 of the argument list
  Enabled: true

ParallelAssignment:
  Description: >-
                  Check for simple usages of parallel assignment.
                  It will only warn when the number of variables
                  matches on both sides of the assignment.
  Enabled: true

# Cop supports --auto-correct.
# Configuration parameters: AllowSafeAssignment.
ParenthesesAroundCondition:
  Description: >-
                 Don't use parentheses around the condition of an
                 if/unless/while.
  Enabled: true
  # Allow safe assignment in conditions.
  #AllowSafeAssignment: true

PercentLiteralDelimiters:
  Description: 'Use `%`-literal delimiters consistently'
  Enabled: true

PercentQLiterals:
  Description: 'Checks if uses of %Q/%q match the configured preference.'
  Enabled: true

# Cop supports --auto-correct.
PerlBackrefs:
  Description: 'Avoid Perl-style regex back references.'
  Enabled: true

# Configuration parameters: NamePrefixBlacklist.
PredicateName:
  Description: 'Check the names of predicate methods.'
  Enabled: true
  # NamePrefixBlacklist:
    # - is_
    # - has_
    # - have_
    # Cop supports --auto-correct.

# Cop supports --auto-correct.
PreferredHashMethods:
  Description: 'Checks use of `has_key?` and `has_value?` Hash methods.'
  Enabled: true

Proc:
  Description: 'Use proc instead of Proc.new.'
  Enabled: true

# Configuration parameters: EnforcedStyle, SupportedStyles.
RaiseArgs:
  Description: 'Checks the arguments passed to raise/fail.'
  Enabled: true
  # EnforcedStyle: exploded
  # SupportedStyles:
    # - compact # raise Exception.new(msg)
    # - exploded # raise Exception, msg

RedundantBegin:
  Description: "Don't use begin blocks when they are not needed."
  Enabled: true

RedundantException:
  Description: "Checks for an obsolete RuntimeException argument in raise/fail."
  Enabled: true

RedundantFreeze:
  Description: "Checks usages of Object#freeze on immutable objects."
  Enabled: true

RedundantParentheses:
  Description: "Checks for parentheses that seem not to serve any purpose."
  Enabled: true

# Cop supports --auto-correct.
# Configuration parameters: AllowMultipleReturnValues.
RedundantReturn:
  Description: "Don't use return where it's not required."
  Enabled: true
  # When true allows code like `return x, y`.
  #AllowMultipleReturnValues: false

# Cop supports --auto-correct.
RedundantSelf:
  Description: "Don't use self where it's not needed."
  Enabled: true

RescueEnsureAlignment:
  Description: 'Align rescues and ensures correctly.'
  Enabled: true

RescueModifier:
  Description: 'Avoid using rescue in its modifier form.'
  Enabled: true

SelfAssignment:
  Description: >-
                 Checks for places where self-assignment shorthand should have
                 been used.
  Enabled: true

# Offence count: 115
# Configuration parameters: AllowAsExpressionSeparator.
Semicolon:
  Description: "Don't use semicolons to terminate expressions."
  Enabled: true
  # Allow ; to separate several expressions on the same line.
  # AllowAsExpressionSeparator: false

# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
SignalException:
  Description: 'Checks for proper usage of fail and raise.'
  Enabled: true
  # EnforcedStyle: semantic
  # SupportedStyles:
    # - only_raise
    # - only_fail
    # - semantic

# Configuration parameters: AllowIfMethodIsEmpty.
SingleLineMethods:
  Description: 'Avoid single-line methods.'
  Enabled: true
  #AllowIfMethodIsEmpty: true

SpaceBeforeFirstArg:
  Description: >-
                 Checks that exactly one space is used between a method name
                 and the first argument for method calls without parentheses.
  Enabled: true

SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  Enabled: true

SpaceBeforeBlockBraces:
  Description: >-
                 Checks that the left block brace has or doesn't have space
                 before it.
  Enabled: true

SpaceBeforeComma:
  Description: 'No spaces before commas.'
  Enabled: true

SpaceBeforeComment:
  Description: >-
                 Checks for missing space between code and a comment on the
                 same line.
  Enabled: true

SpaceBeforeSemicolon:
  Description: 'No spaces before semicolons.'
  Enabled: true

SpaceInsideBlockBraces:
  Description: >-
                 Checks that block braces have or don't have surrounding space.
                 For blocks taking parameters, checks that the left brace has
                 or doesn't have trailing space.
  Enabled: true

SpaceAroundBlockParameters:
  Description: 'Checks the spacing inside and after block parameters pipes.'
  Enabled: true

SpaceAroundKeyword:
  Description: 'Use a space around keywords if appropriate.'
  Enabled: true

SpaceInsideArrayPercentLiteral:
  Description: 'No unnecessary additional spaces between elements in %i/%w literals.'
  Enabled: true

SpaceInsidePercentLiteralDelimiters:
  Description: 'No unnecessary spaces inside delimiters of %i/%w/%x literals.'
  Enabled: true

SpaceInsideRangeLiteral:
  Description: 'No spaces inside range literals.'
  Enabled: true

SpaceInsideStringInterpolation:
  Description: 'Checks for padding/surrounding spaces inside string interpolation.'
  Enabled: true

SpecialGlobalVars:
  Description: 'Avoid Perl-style global variables.'
  Enabled: true

StabbyLambdaParentheses:
  Description: 'Check for the usage of parentheses around stabby lambda arguments.'
  Enabled: true

StringLiterals:
  Description: 'Checks if uses of quotes match the configured preference.'
  Enabled: true

StringLiteralsInInterpolation:
  Description: >-
                 Checks if uses of quotes inside expressions in interpolated
                 strings match the configured preference.
  Enabled: true

StructInheritance:
  Description: 'Checks for inheritance from Struct.new.'
  Enabled: true

SymbolLiteral:
  Description: 'Use plain symbols instead of string symbols when possible.'
  Enabled: true

SymbolProc:
  Description: 'Use symbols as procs instead of blocks when possible.'
  Enabled: true

Tab:
  Description: 'No hard tabs.'
  Enabled: true

# Cop supports --auto-correct.
TrailingBlankLines:
  Description: 'Checks for superfluous trailing blank lines.'
  Enabled: true

TrailingCommaInArguments:
  Description: 'Checks for trailing comma in argument lists.'
  Enabled: true

# Cop supports --auto-correct.
TrailingWhitespace:
  Description: 'Avoid trailing whitespace.'
  Enabled: true

# Configuration parameters: ExactNameMatch, AllowPredicates, Whitelist.
TrivialAccessors:
  Description: 'Prefer attr_* methods to trivial readers/writers.'
  Enabled: true
  # ExactNameMatch: false
  # AllowPredicates: false
  # Whitelist:
    # - to_ary
    # - to_a
    # - to_c
    # - to_enum
    # - to_h
    # - to_hash
    # - to_i
    # - to_int
    # - to_io
    # - to_open
    # - to_path
    # - to_proc
    # - to_r
    # - to_regexp
    # - to_str
    # - to_s
    # - to_sym

UnlessElse:
  Description: >-
                 Never use unless with else. Rewrite these with the positive
                 case first.
  Enabled: true

UnneededCapitalW:
  Description: 'Checks for %W when interpolation is not needed.'
  Enabled: true

UnneededInterpolation:
  Description: 'Checks for strings that are just an interpolated expression.'
  Enabled: true

UnneededPercentQ:
  Description: 'Checks for %q/%Q when single quotes or double quotes would do.'
  Enabled: true

TrailingUnderscoreVariable:
  Description: >-
                 Checks for the usage of unneeded trailing underscores at the
                 end of parallel variable assignment.
  AllowNamedUnderscoreVariables: true
  Enabled: true

VariableInterpolation:
  Description: >-
                 Don't interpolate global, instance and class variables
                 directly in strings.
  Enabled: true

# Configuration parameters: EnforcedStyle, SupportedStyles.
VariableName:
  Description: 'Use the configured style when naming variables.'
  Enabled: true
  # EnforcedStyle: snake_case
  # SupportedStyles:
    # - snake_case
    # - camelCase

# Cop supports --auto-correct.
WhenThen:
  Description: 'Use when x then ... for one-line cases.'
  Enabled: true

# Cop supports --auto-correct.
WhileUntilDo:
  Description: 'Checks for redundant do after while or until.'
  Enabled: true

WhileUntilModifier:
  Description: >-
                 Favor modifier while/until usage when you have a
                 single-line body.
  Enabled: true

ZeroLengthPredicate:
  Description: 'Use #empty? when testing for objects of length 0.'
  Enabled: true

#################### Metrics ################################

AbcSize:
  Description: >-
                 A calculated magnitude based on number of assignments,
                 branches, and conditions.
  Enabled: true

BlockNesting:
  Description: 'Avoid excessive block nesting'
  Max: 4
  Enabled: true

ModuleLength:
  Description: 'Avoid modules longer than 100 lines of code.'
  Enabled: true

CyclomaticComplexity:
  Description: 'Avoid complex methods.'
  Max: 25
  # Max: 6
  Enabled: true

LineLength:
  Description: 'Limit lines to 80 characters.'
  Max: 2419
  # Max: 79
  Enabled: true

# Configuration parameters: CountComments.
MethodLength:
  Description: 'Use the configured style when naming methods.'
  Max: 1012
  # CountComments: false  # count full line comments?
  # Max: 10

# Configuration parameters: CountKeywordArgs.
ParameterLists:
  Description: 'Avoid parameter lists longer than three or four parameters.'
  Max: 7
  # Max: 5
  # CountKeywordArgs: true

PerceivedComplexity:
  Description: >-
                 A complexity metric geared towards measuring complexity for a
                 human reader.
  Enabled: true

#################### Lint ################################

AmbiguousOperator:
  Description: >-
                 Checks for ambiguous operators in the first argument of a
                 method invocation without parentheses.
  Enabled: true

AmbiguousRegexpLiteral:
  Description: >-
                 Checks for ambiguous regexp literals in the first argument of
                 a method invocation without parentheses.
  Enabled: true

# Configuration parameters: AllowSafeAssignment.
AssignmentInCondition:
  Description: "Don't use assignment in conditions."
  Enabled: true
  # AllowSafeAssignment: true

BlockAlignment:
  Description: 'Align block ends correctly.'
  Enabled: true

CircularArgumentReference:
  Description: "Default values in optional keyword arguments and optional ordinal arguments should not refer back to the name of the argument."
  Enabled: true

ConditionPosition:
  Description: >-
                 Checks for condition placed in a confusing position relative to
                 the keyword.
  Enabled: true

Debugger:
  Description: 'Check for debugger calls.'
  Enabled: true

DefEndAlignment:
  Description: 'Align ends corresponding to defs correctly.'
  Enabled: true

DeprecatedClassMethods:
  Description: 'Check for deprecated class method calls.'
  Enabled: true

DuplicateMethods:
  Description: 'Check for duplicate method definitions.'
  Enabled: true

DuplicatedKey:
  Description: 'Check for duplicate keys in hash literals.'
  Enabled: true

EachWithObjectArgument:
  Description: 'Check for immutable argument given to each_with_object.'
  Enabled: true

ElseLayout:
  Description: 'Check for odd code arrangement in an else block.'
  Enabled: true

EmptyEnsure:
  Description: 'Checks for empty ensure block.'
  Enabled: true

EmptyInterpolation:
  Description: 'Checks for empty string interpolation.'
  Enabled: true

# Configuration parameters: AlignWith, SupportedStyles.
EndAlignment:
  Description: 'Align ends correctly.'
  Enabled: true
  # # The value `keyword` means that `end` should be aligned with the matching
  # # keyword (if, while, etc.).
  # # The value `variable` means that in assignments, `end` should be aligned
  # # with the start of the variable on the left hand side of `=`. In all other
  # # situations, `end` should still be aligned with the keyword.
  # AlignWith: keyword
  # SupportedStyles:
    # - keyword
    # - variable

EndInMethod:
  Description: 'END blocks should not be placed inside method definitions.'
  Enabled: true

EnsureReturn:
  Description: 'Never use return in an ensure block.'
  Enabled: true

Eval:
  Description: 'The use of eval represents a serious security risk.'
  Enabled: true

FloatOutOfRange:
  Description: >-
                 Catches floating-point literals too large or small for Ruby to
                 represent.
  Enabled: true

FormatParameterMismatch:
  Description: 'The number of parameters to format/sprint must match the fields.'
  Enabled: true

HandleExceptions:
  Description: "Don't suppress exception."
  Enabled: true

ImplicitStringConcatenation:
  Description: >-
                 Checks for adjacent string literals on the same line, which
                 could better be represented as a single string literal.
  Enabled: true

IneffectiveAccessModifier:
  Description: >-
                 Checks for attempts to use `private` or `protected` to set
                 the visibility of a class method, which does not work.
  Enabled: true

InheritException:
  Description: 'Avoid inheriting from the `Exception` class.'
  Enabled: true

# InvalidCharacterLiteral:
  # Description: >-
                 # Checks for invalid character literals with a non-escaped
                 # whitespace character.
  # Enabled: true

LiteralInCondition:
  Description: 'Checks of literals used in conditions.'
  Enabled: true

LiteralInInterpolation:
  Description: 'Checks for literals used in interpolation.'
  Enabled: true

Loop:
  Description: >-
                 Use Kernel#loop with break rather than begin/end/until or
                 begin/end/while for post-loop tests.
  Enabled: true

NestedMethodDefinition:
  Description: 'Do not use nested method definitions.'
  Enabled: true

NextWithoutAccumulator:
  Description:  >-
                  Do not omit the accumulator when calling `next`
                  in a `reduce`/`inject` block.
  Enabled: true

NonLocalExitFromIterator:
  Description: 'Do not use return in iterator to cause non-local exit.'
  Enabled: true

ParenthesesAsGroupedExpression:
  Description: >-
                 Checks for method calls with a space before the opening
                 parenthesis.
  Enabled: true

PercentStringArray:
  Description: >-
                 Checks for unwanted commas and quotes in %w/%W literals.
  Enabled: true

PercentSymbolArray:
  Description: >-
                 Checks for unwanted commas and colons in %i/%I literals.
  Enabled: true

RandOne:
  Description: >-
                 Checks for `rand(1)` calls. Such calls always return `0`
                 and most likely a mistake.
  Enabled: true

RequireParentheses:
  Description: >-
                 Use parentheses in the method call to avoid confusion
                 about precedence.
  Enabled: true

RescueException:
  Description: 'Avoid rescuing the Exception class.'
  Enabled: true

ShadowedException:
  Description: >-
                  Avoid rescuing a higher level exception
                  before a lower level exception.
  Enabled: true

ShadowingOuterLocalVariable:
  Description: >-
                 Do not use the same name as outer local variable
                 for block arguments or block local variables.
  Enabled: true

StringConversionInInterpolation:
  Description: 'Checks for Object#to_s usage in string interpolation.'
  Enabled: true

UnderscorePrefixedVariableName:
  Description: 'Do not use prefix `_` for a variable that is used.'
  Enabled: true

UnneededDisable:
  Description: >-
                 Checks for rubocop:disable comments that can be removed.
                 Note: this cop is not disabled when disabling all cops.
                 It must be explicitly disabled.
  Enabled: true

UnusedBlockArgument:
  Description: 'Checks for unused block arguments.'
  Enabled: true

UnusedMethodArgument:
  Description: 'Checks for unused method arguments.'
  Enabled: true

UnreachableCode:
  Description: 'Unreachable code.'
  Enabled: true

UselessAccessModifier:
  Description: 'Checks for useless access modifiers.'
  Enabled: true

UselessArraySplat:
  Description: 'Checks for useless array splats.'
  Enabled: true

UselessAssignment:
  Description: 'Checks for useless assignment to a local variable.'
  Enabled: true

UselessComparison:
  Description: 'Checks for comparison of something with itself.'
  Enabled: true

UselessElseWithoutRescue:
  Description: 'Checks for useless `else` in `begin..end` without `rescue`.'
  Enabled: true

UselessSetterCall:
  Description: 'Checks for useless setter call to a local variable.'
  Enabled: true

Void:
  Description: 'Possible use of operator/literal/variable in void context.'
  Enabled: true

##################### Performance #############################

Casecmp:
  Description: >-
             Use `casecmp` rather than `downcase ==`, `upcase ==`, `== downcase`, or `== upcase`..
  Enabled: true

CaseWhenSplat:
  Description: >-
                  Place `when` conditions that use splat at the end
                  of the list of `when` branches.
  Enabled: true

Count:
  Description: >-
                  Use `count` instead of `select...size`, `reject...size`,
                  `select...count`, `reject...count`, `select...length`,
                  and `reject...length`.
  # This cop has known compatibility issues with `ActiveRecord` and other
  # frameworks. ActiveRecord's `count` ignores the block that is passed to it.
  # For more information, see the documentation in the cop itself.
  # If you understand the known risk, you can disable `SafeMode`.
  SafeMode: true
  Enabled: true

Detect:
  Description: >-
                  Use `detect` instead of `select.first`, `find_all.first`,
                  `select.last`, and `find_all.last`.
  # This cop has known compatibility issues with `ActiveRecord` and other
  # frameworks. `ActiveRecord` does not implement a `detect` method and `find`
  # has its own meaning. Correcting `ActiveRecord` methods with this cop
  # should be considered unsafe.
  SafeMode: true
  Enabled: true

DoubleStartEndWith:
  Description: >-
                  Use `str.{start,end}_with?(x, ..., y, ...)`
                  instead of `str.{start,end}_with?(x, ...) || str.{start,end}_with?(y, ...)`.
  Enabled: true

EndWith:
  Description: 'Use `end_with?` instead of a regex match anchored to the end of a string.'
  Enabled: true

Performance/FixedSize:
  Description: 'Do not compute the size of statically sized objects except in constants'
  Enabled: true

FlatMap:
  Description: >-
                  Use `Enumerable#flat_map`
                  instead of `Enumerable#map...Array#flatten(1)`
                  or `Enumberable#collect..Array#flatten(1)`
  Enabled: true
  EnabledForFlattenWithoutParams: false
  # If enabled, this cop will warn about usages of
  # `flatten` being called without any parameters.
  # This can be dangerous since `flat_map` will only flatten 1 level, and
  # `flatten` without any parameters can flatten multiple levels.

# HashEachMethods:
  # Description: >-
                 # Use `Hash#each_key` and `Hash#each_value` instead of
                 # `Hash#keys.each` and `Hash#values.each`.
  # Enabled: true
  # AutoCorrect: false

LstripRstrip:
  Description: 'Use `strip` instead of `lstrip.rstrip`.'
  Enabled: true

PushSplat:
  Description: 'Use `concat` instead of `push(*)`.'
  Enabled: true

RangeInclude:
  Description: 'Use `Range#cover?` instead of `Range#include?`.'
  Enabled: true

RedundantBlockCall:
  Description: 'Use `yield` instead of `block.call`.'
  Enabled: true

RedundantMatch:
  Description: >-
                  Use `=~` instead of `String#match` or `Regexp#match` in a context where the
                  returned `MatchData` is not needed.
  Enabled: true

RedundantMerge:
  Description: 'Use Hash#[]=, rather than Hash#merge! with a single key-value pair.'
  Enabled: true

RedundantSortBy:
  Description: 'Use `sort` instead of `sort_by { |x| x }`.'
  Enabled: true

ReverseEach:
  Description: 'Use `reverse_each` instead of `reverse.each`.'
  Enabled: true

Sample:
  Description: >-
                  Use `sample` instead of `shuffle.first`,
                  `shuffle.last`, and `shuffle[Fixnum]`.
  Enabled: true

Size:
  Description: >-
                  Use `size` instead of `count` for counting
                  the number of elements in `Array` and `Hash`.
  Enabled: true

StartWith:
  Description: 'Use `start_with?` instead of a regex match anchored to the beginning of a string.'
  Enabled: true

StringReplacement:
  Description: >-
                  Use `tr` instead of `gsub` when you are replacing the same
                  number of characters. Use `delete` instead of `gsub` when
                  you are deleting characters.
  Enabled: true

TimesMap:
  Description: 'Checks for .times.map calls.'
  Enabled: true
